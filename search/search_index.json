{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"USC COVID NUMBERS PARSER \u00b6 Installation \u00b6 The code can be cloned from GitHub at: https://github.com/Cmheidelberg/USC-Covid-Numbers-Parser . There are some dependancies which can be installed using pip : BeautifulSoup is used for html parsing. It can be installed using: pip install beautifulsoup4 geojson is used for reading and creating geojson files. These files are able to be imported into software such as CARTO for data visualization. Directory structure \u00b6 Directory structure tree: \u00b6 USC-Covid-Data-Parser \u251c\u2500\u2500 data \u251c\u2500\u2500 docs \u251c\u2500\u2500 html \u2514\u2500\u2500 src Descriptions: \u00b6 /data : any internal data used by the program. By default any data the program needs should be included when you clone the repository. /docs : this folder houses markdown files responsible for this documentation. Unless you are modifying the documentation dont edit anything in this directory /html : the data in the html folder should be downloaded from the usc covid data page. You can download these pages by hitting ctrl + s while viewing the page. When you download it place it into the /html directory. /src : This is the code folder. Do not edit it unless you want to modify the code","title":"Home"},{"location":"#usc-covid-numbers-parser","text":"","title":"USC COVID NUMBERS PARSER"},{"location":"#installation","text":"The code can be cloned from GitHub at: https://github.com/Cmheidelberg/USC-Covid-Numbers-Parser . There are some dependancies which can be installed using pip : BeautifulSoup is used for html parsing. It can be installed using: pip install beautifulsoup4 geojson is used for reading and creating geojson files. These files are able to be imported into software such as CARTO for data visualization.","title":"Installation"},{"location":"#directory-structure","text":"","title":"Directory structure"},{"location":"#directory-structure-tree","text":"USC-Covid-Data-Parser \u251c\u2500\u2500 data \u251c\u2500\u2500 docs \u251c\u2500\u2500 html \u2514\u2500\u2500 src","title":"Directory structure tree:"},{"location":"#descriptions","text":"/data : any internal data used by the program. By default any data the program needs should be included when you clone the repository. /docs : this folder houses markdown files responsible for this documentation. Unless you are modifying the documentation dont edit anything in this directory /html : the data in the html folder should be downloaded from the usc covid data page. You can download these pages by hitting ctrl + s while viewing the page. When you download it place it into the /html directory. /src : This is the code folder. Do not edit it unless you want to modify the code","title":"Descriptions:"},{"location":"data/","text":"","title":"Data folder"},{"location":"docs/","text":"","title":"Docs folder"},{"location":"glossary/","text":"","title":"Glossary"},{"location":"html/","text":"","title":"HTML folder"},{"location":"code/constants/","text":"","title":"constants.py"},{"location":"code/map_building_code_to_outline/","text":"","title":"map_building_code_to_outline"},{"location":"code/parse_building_directory/","text":"Summary \u00b6 Setup \u00b6 Invocation \u00b6 Invocation line: python src/parse_building_directory.py Output \u00b6","title":"parse_building_directory.py"},{"location":"code/parse_building_directory/#summary","text":"","title":"Summary"},{"location":"code/parse_building_directory/#setup","text":"","title":"Setup"},{"location":"code/parse_building_directory/#invocation","text":"Invocation line: python src/parse_building_directory.py","title":"Invocation"},{"location":"code/parse_building_directory/#output","text":"","title":"Output"},{"location":"code/parser/","text":"Summary \u00b6 This project is designed to parse the raw html from the USC COVID data page and convert it in a more usable csv. The generated csv is then validated and any erronious rows are removed to guarantee the output file is consistant. The validation ensures that each column in the csv matches the pattern described in the column description below. For each row in the csv, any columns that cannot be parsed will be entered as null to prevent uneven rows. Rows with null values could be post-processed later if needed. Since it is hard to do meaningful analysis on the data generated from covid data page alone, additional features have been added to enrich the output data. After the covid data page is parsed, an option to append building address to the end of the csv. This adds another two columns to each row of the csv with the full buiding name and street address. Since this process is automatic it is not perfect, any buildings who's address cannot be resolved will be entered as null . The appended data is added from output csv ( building_code_map.csv ) of the parse_building_directory.py script. If this csv file doesnt exist, or if it is missconfigured then the parser will not be able to add the additional columns into the output csv file. Setup \u00b6 Downloading the covid data \u00b6 The html parser reads in the raw html page from the USC COVID data site. Since the page requires users to be logged into the USC Shibboleth SSO (which additonally requires a confirmation from DUO Push) users are required to manually download the covid data page html. To do this simply navigate to the USC COVID data page and hit ctrl + s on the keyboard. Once downloaded the user will need to move it into the /html directory. Warning Because of the inconsistant way the covid data is entered onto the site, older data might not be correctly parsed in the current state of the parser. This parser was designed on the 2022 January/Febuary datasets. Setting up the building code map csv file for the building information files \u00b6 The building_code_map.csv should be included when you clone the repository. If needed, this file can be regenerated by following the steps in the parse_building_directory.py page. The building map csv file name is defined in the src/constants.py file. Invocation \u00b6 To run parser.py from the base project directory simply type: python src/parser.py into your terminal from the base project directory. Note: All directory references made within the file use relative paths, so it will not matter what directory the user calls this script from. Output \u00b6 Base parsed output \u00b6 An example of an output csv is as follows: class_name,code,weekday,start_time,end_time,location AME-341B,28775,W,14:00,16:50,BHE301 AMST-101,10310,TH,09:30,10:50,MHP101 AMST-101,10312,F,11:00,11:50,GFS220 AMST-211,10300,MW,15:30,16:50,WPH207 ... The first line is always the header containing the name of each colomn. Below is a description of each colomn: Column name description class_name Class name + code separated by hyphen code Internal USC class code. Contains only numbers. weekday Characters for day of week. Subset of \"MTWTHF\" start_time Starting time (24 hr). Format is hour:min end_time Ending time (24 hr). Format is hour:min location (building) location name and room number Building information appended \u00b6 If the optional append building location selection is made the example output would be as follows: class_name,code,weekday,start_time,end_time,location,full_building_name,building_address AME-341B,28775,W,14:00,16:50,BHE301,Biegler Hall of Engineering,920 Downey Way AMST-101,10310,TH,09:30,10:50,MHP101,Mudd Memorial Hall of Philosophy,3709 Trousdale Pkwy. AMST-101,10312,F,11:00,11:50,GFS220,Grace Ford Salvatori Hall of Letters,Arts and Sciences 3601 Watt Way AMST-211,10300,MW,15:30,16:50,WPH207,Waite Phillips Hall,3470 Trousdale Pkwy. ... The two new collumns descriptions: Column name description full_building_name Full name of building as presented on the USC building directory building_address Building address as presented on the USC building directory","title":"parser.py"},{"location":"code/parser/#summary","text":"This project is designed to parse the raw html from the USC COVID data page and convert it in a more usable csv. The generated csv is then validated and any erronious rows are removed to guarantee the output file is consistant. The validation ensures that each column in the csv matches the pattern described in the column description below. For each row in the csv, any columns that cannot be parsed will be entered as null to prevent uneven rows. Rows with null values could be post-processed later if needed. Since it is hard to do meaningful analysis on the data generated from covid data page alone, additional features have been added to enrich the output data. After the covid data page is parsed, an option to append building address to the end of the csv. This adds another two columns to each row of the csv with the full buiding name and street address. Since this process is automatic it is not perfect, any buildings who's address cannot be resolved will be entered as null . The appended data is added from output csv ( building_code_map.csv ) of the parse_building_directory.py script. If this csv file doesnt exist, or if it is missconfigured then the parser will not be able to add the additional columns into the output csv file.","title":"Summary"},{"location":"code/parser/#setup","text":"","title":"Setup"},{"location":"code/parser/#downloading-the-covid-data","text":"The html parser reads in the raw html page from the USC COVID data site. Since the page requires users to be logged into the USC Shibboleth SSO (which additonally requires a confirmation from DUO Push) users are required to manually download the covid data page html. To do this simply navigate to the USC COVID data page and hit ctrl + s on the keyboard. Once downloaded the user will need to move it into the /html directory. Warning Because of the inconsistant way the covid data is entered onto the site, older data might not be correctly parsed in the current state of the parser. This parser was designed on the 2022 January/Febuary datasets.","title":"Downloading the covid data"},{"location":"code/parser/#setting-up-the-building-code-map-csv-file-for-the-building-information-files","text":"The building_code_map.csv should be included when you clone the repository. If needed, this file can be regenerated by following the steps in the parse_building_directory.py page. The building map csv file name is defined in the src/constants.py file.","title":"Setting up the building code map csv file for the building information files"},{"location":"code/parser/#invocation","text":"To run parser.py from the base project directory simply type: python src/parser.py into your terminal from the base project directory. Note: All directory references made within the file use relative paths, so it will not matter what directory the user calls this script from.","title":"Invocation"},{"location":"code/parser/#output","text":"","title":"Output"},{"location":"code/parser/#base-parsed-output","text":"An example of an output csv is as follows: class_name,code,weekday,start_time,end_time,location AME-341B,28775,W,14:00,16:50,BHE301 AMST-101,10310,TH,09:30,10:50,MHP101 AMST-101,10312,F,11:00,11:50,GFS220 AMST-211,10300,MW,15:30,16:50,WPH207 ... The first line is always the header containing the name of each colomn. Below is a description of each colomn: Column name description class_name Class name + code separated by hyphen code Internal USC class code. Contains only numbers. weekday Characters for day of week. Subset of \"MTWTHF\" start_time Starting time (24 hr). Format is hour:min end_time Ending time (24 hr). Format is hour:min location (building) location name and room number","title":"Base parsed output"},{"location":"code/parser/#building-information-appended","text":"If the optional append building location selection is made the example output would be as follows: class_name,code,weekday,start_time,end_time,location,full_building_name,building_address AME-341B,28775,W,14:00,16:50,BHE301,Biegler Hall of Engineering,920 Downey Way AMST-101,10310,TH,09:30,10:50,MHP101,Mudd Memorial Hall of Philosophy,3709 Trousdale Pkwy. AMST-101,10312,F,11:00,11:50,GFS220,Grace Ford Salvatori Hall of Letters,Arts and Sciences 3601 Watt Way AMST-211,10300,MW,15:30,16:50,WPH207,Waite Phillips Hall,3470 Trousdale Pkwy. ... The two new collumns descriptions: Column name description full_building_name Full name of building as presented on the USC building directory building_address Building address as presented on the USC building directory","title":"Building information appended"},{"location":"code/utils/","text":"a","title":"utils.py"}]}